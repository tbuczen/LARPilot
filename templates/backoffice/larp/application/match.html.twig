{% extends 'backoffice/larp/base.html.twig' %}

{% block larp_content %}
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>{{ 'backoffice.larp.applications.match'|trans }}</h2>
        <a href="{{ path('backoffice_larp_applications_list', {'larp': larp.id}) }}" class="btn btn-secondary">
            <i class="bi bi-arrow-left"></i> {{ 'common.back'|trans }}
        </a>
    </div>

    <!-- Filter Form -->
    <div class="card mb-4">
        <div class="card-header">
            <h5 class="card-title mb-0">{{ 'common.filter'|trans }}</h5>
        </div>
        <div class="card-body">
            {% include 'includes/filter_form.html.twig' with { form: filterForm, larp: larp } %}
        </div>
    </div>

    {% if characterMatches is empty %}
        <div class="card-body">
            <div class="alert alert-info mb-0">
                {{ 'common.empty_list'|trans }}
            </div>
        </div>
    {% else %}
        <div class="card-body">
            {% for characterMatch in characterMatches %}
                <div class="card mb-3">
                    <div class="card-header bg-primary text-white">
                        <h4 class="mb-0">
                            <a href="{{ path('backoffice_larp_story_character_modify', {'larp': larp.id, 'character': characterMatch.characterId}) }}" class="text-black text-decoration-none">
                            {{ characterMatch.characterTitle }}
                            </a>
                        </h4>
                    </div>
                    <div class="card-body">
                        <table class="table table-sm">
                            <thead>
                            <tr>
                                <th>{{ 'backoffice.larp.applications.applicant'|trans }}</th>
                                <th>{{ 'public.larp.application.priority'|trans }}</th>
                                <th>{{ 'public.larp.application.justification'|trans }}</th>
                                <th>{{ 'backoffice.common.votes'|trans }}</th>
                                <th>{{ 'common.actions'|trans }}</th>
                            </tr>
                            </thead>
                            <tbody>
                            {% for choice in characterMatch.choices %}
                                <tr>
                                    <td>{{ choice.applicantEmail }}</td>
                                    <td>
                                        <span class="badge bg-secondary">{{ choice.priority }}</span>
                                    </td>
                                    <td>{{ choice.justification|default('-') }}</td>
                                    <td>
                                            <span class="badge bg-{{ choice.voteStats.total > 0 ? 'success' : (choice.voteStats.total < 0 ? 'danger' : 'secondary') }}">
                                                {{ choice.voteStats.total }}
                                            </span>
                                        <small class="text-muted">
                                            (↑{{ choice.voteStats.upvotes }} ↓{{ choice.voteStats.downvotes }})
                                        </small>
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <button type="button"
                                                    class="btn btn-sm btn-success {{ userVotes[choice.id] is defined and userVotes[choice.id].vote > 0 ? 'active' : '' }}"
                                                    data-bs-toggle="modal"
                                                    data-bs-target="#voteModal"
                                                    data-choice-id="{{ choice.id }}"
                                                    data-character="{{ choice.characterTitle }}"
                                                    data-applicant="{{ choice.applicantEmail }}"
                                                    data-vote="1">
                                                <i class="bi bi-hand-thumbs-up"></i>
                                            </button>
                                            <button type="button"
                                                    class="btn btn-sm btn-danger {{ userVotes[choice.id] is defined and userVotes[choice.id].vote < 0 ? 'active' : '' }}"
                                                    data-bs-toggle="modal"
                                                    data-bs-target="#voteModal"
                                                    data-choice-id="{{ choice.id }}"
                                                    data-character="{{ choice.characterTitle }}"
                                                    data-applicant="{{ choice.applicantEmail }}"
                                                    data-vote="-1">
                                                <i class="bi bi-hand-thumbs-down"></i>
                                            </button>
                                            <button type="button"
                                                    class="btn btn-sm btn-info"
                                                    data-bs-toggle="modal"
                                                    data-bs-target="#voteDetailsModal"
                                                    data-choice-id="{{ choice.id }}"
                                                    data-character="{{ choice.characterTitle }}"
                                                    data-applicant="{{ choice.applicantEmail }}">
                                                <i class="bi bi-info-circle"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            {% endfor %}
                            </tbody>
                        </table>
                    </div>
                </div>
            {% endfor %}
        </div>
    {% endif %}


    {% include 'includes/pagination.html.twig' with { pagination: pagination } %}

    <!-- Vote Modal -->
    <div class="modal fade" id="voteModal" tabindex="-1" aria-labelledby="voteModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form id="voteForm" method="post">
                    <div class="modal-header">
                        <h5 class="modal-title" id="voteModalLabel">{{ 'backoffice.larp.applications.cast_vote'|trans }}</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <strong>{{ 'common.character'|trans }}:</strong> <span id="voteCharacter"></span>
                        </div>
                        <div class="mb-3">
                            <strong>{{ 'backoffice.larp.applications.applicant'|trans }}:</strong> <span id="voteApplicant"></span>
                        </div>
                        <div class="mb-3">
                            <strong>{{ 'backoffice.larp.applications.vote_type'|trans }}:</strong> 
                            <span id="voteType" class="badge"></span>
                        </div>
                        <div class="mb-3">
                            <label for="voteJustification" class="form-label">{{ 'backoffice.larp.applications.vote_justification'|trans }}</label>
                            <textarea class="form-control" id="voteJustification" name="justification" rows="3" 
                                      placeholder="{{ 'backoffice.larp.applications.vote_justification_placeholder'|trans }}"></textarea>
                        </div>
                        <input type="hidden" id="voteValue" name="vote" value="">
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">{{ 'common.cancel'|trans }}</button>
                        <button type="submit" class="btn btn-primary">{{ 'backoffice.larp.applications.submit_vote'|trans }}</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Vote Details Modal -->
    <div class="modal fade" id="voteDetailsModal" tabindex="-1" aria-labelledby="voteDetailsModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="voteDetailsModalLabel">{{ 'backoffice.larp.applications.vote_details'|trans }}</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <strong>{{ 'common.character'|trans }}:</strong> <span id="detailsCharacter"></span>
                    </div>
                    <div class="mb-3">
                        <strong>{{ 'backoffice.larp.applications.applicant'|trans }}:</strong> <span id="detailsApplicant"></span>
                    </div>
                    <div id="voteDetailsList"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">{{ 'common.close'|trans }}</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        const voteModal = document.getElementById('voteModal');
        voteModal.addEventListener('show.bs.modal', event => {
            const button = event.relatedTarget;
            const choiceId = button.getAttribute('data-choice-id');
            const character = button.getAttribute('data-character');
            const applicant = button.getAttribute('data-applicant');
            const voteValue = button.getAttribute('data-vote');

            // Update form action
            voteModal.querySelector('#voteForm').action =
                `{{ path('backoffice_larp_applications_vote', {'larp': larp.id, 'choice': '__CHOICE_ID__'}) }}`
                    .replace('__CHOICE_ID__', choiceId);

            // Update form fields
            voteModal.querySelector('#voteValue').value = voteValue;
            voteModal.querySelector('#voteCharacter').textContent = character;
            voteModal.querySelector('#voteApplicant').textContent = applicant;
            voteModal.querySelector('#voteJustification').value = '';

            // Update vote type badge
            const voteType = voteModal.querySelector('#voteType');
            if (parseInt(voteValue) > 0) {
                voteType.textContent = '{{ 'backoffice.larp.applications.upvote'|trans }}';
                voteType.className = 'badge bg-success';
            } else {
                voteType.textContent = '{{ 'backoffice.larp.applications.downvote'|trans }}';
                voteType.className = 'badge bg-danger';
            }
        });

        const voteDetailsModal = document.getElementById('voteDetailsModal');
        voteDetailsModal.addEventListener('show.bs.modal', event => {
            const button = event.relatedTarget;
            const choiceId = button.getAttribute('data-choice-id');
            const character = button.getAttribute('data-character');
            const applicant = button.getAttribute('data-applicant');

            voteDetailsModal.querySelector('#detailsCharacter').textContent = character;
            voteDetailsModal.querySelector('#detailsApplicant').textContent = applicant;

            const voteList = voteDetailsModal.querySelector('#voteDetailsList');
            voteList.innerHTML = '<div class="text-center"><div class="spinner-border" role="status"></div></div>';

            fetch(`{{ path('backoffice_larp_applications_vote_details', {'larp': larp.id, 'choice': '__CHOICE_ID__'}) }}`
                .replace('__CHOICE_ID__', choiceId))
                .then(response => response.json())
                .then(data => {
                    if (data.votes.length === 0) {
                        voteList.innerHTML = '<div class="alert alert-info">{{ 'backoffice.larp.applications.no_votes_yet'|trans }}</div>';
                        return;
                    }

                    voteList.innerHTML = data.votes.map(vote => `
                        <div class="card mb-2">
                            <div class="card-body">
                                <div class="d-flex justify-content-between align-items-start">
                                    <div>
                                        <strong>${vote.user}</strong>
                                        <span class="badge ${vote.isUpvote ? 'bg-success' : 'bg-danger'} ms-2">
                                            ${vote.isUpvote ? '{{ 'backoffice.larp.applications.upvote'|trans }}' : '{{ 'backoffice.larp.applications.downvote'|trans }}'}
                                        </span>
                                    </div>
                                    <small class="text-muted">${vote.createdAt}</small>
                                </div>
                                ${vote.justification ? `<div class="mt-2"><small>${vote.justification}</small></div>` : ''}
                            </div>
                        </div>
                    `).join('');
                })
                .catch(error => {
                    console.error('Error fetching vote details:', error);
                    voteList.innerHTML = '<div class="alert alert-danger">{{ 'common.error'|trans }}</div>';
                });
        });
    </script>
{% endblock %}